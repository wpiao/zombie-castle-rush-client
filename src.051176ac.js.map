{"version":3,"sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/src/browser/AccessibilityManager.ts","webpack://xterm/src/browser/Clipboard.ts","webpack://xterm/src/browser/Color.ts","webpack://xterm/src/browser/ColorContrastCache.ts","webpack://xterm/src/browser/ColorManager.ts","webpack://xterm/src/browser/Dom.ts","webpack://xterm/src/browser/Lifecycle.ts","webpack://xterm/src/browser/Linkifier.ts","webpack://xterm/src/browser/Linkifier2.ts","webpack://xterm/src/browser/LocalizableStrings.ts","webpack://xterm/src/browser/MouseZoneManager.ts","webpack://xterm/src/browser/RenderDebouncer.ts","webpack://xterm/src/browser/ScreenDprMonitor.ts","webpack://xterm/src/browser/Terminal.ts","webpack://xterm/src/browser/Viewport.ts","webpack://xterm/src/browser/input/CompositionHelper.ts","webpack://xterm/src/browser/input/Mouse.ts","webpack://xterm/src/browser/input/MoveToCell.ts","webpack://xterm/src/browser/public/AddonManager.ts","webpack://xterm/src/browser/renderer/BaseRenderLayer.ts","webpack://xterm/src/browser/renderer/CursorRenderLayer.ts","webpack://xterm/src/browser/renderer/GridCache.ts","webpack://xterm/src/browser/renderer/LinkRenderLayer.ts","webpack://xterm/src/browser/renderer/Renderer.ts","webpack://xterm/src/browser/renderer/RendererUtils.ts","webpack://xterm/src/browser/renderer/SelectionRenderLayer.ts","webpack://xterm/src/browser/renderer/TextRenderLayer.ts","webpack://xterm/src/browser/renderer/atlas/BaseCharAtlas.ts","webpack://xterm/src/browser/renderer/atlas/CharAtlasCache.ts","webpack://xterm/src/browser/renderer/atlas/CharAtlasUtils.ts","webpack://xterm/src/browser/renderer/atlas/Constants.ts","webpack://xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack://xterm/src/browser/renderer/atlas/LRUMap.ts","webpack://xterm/src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/src/browser/selection/SelectionModel.ts","webpack://xterm/src/browser/services/CharSizeService.ts","webpack://xterm/src/browser/services/CharacterJoinerService.ts","webpack://xterm/src/browser/services/CoreBrowserService.ts","webpack://xterm/src/browser/services/MouseService.ts","webpack://xterm/src/browser/services/RenderService.ts","webpack://xterm/src/browser/services/SelectionService.ts","webpack://xterm/src/browser/services/Services.ts","webpack://xterm/src/browser/services/SoundService.ts","webpack://xterm/src/common/CircularList.ts","webpack://xterm/src/common/Clone.ts","webpack://xterm/src/common/CoreTerminal.ts","webpack://xterm/src/common/EventEmitter.ts","webpack://xterm/src/common/InputHandler.ts","webpack://xterm/src/common/Lifecycle.ts","webpack://xterm/src/common/Platform.ts","webpack://xterm/src/common/TypedArrayUtils.ts","webpack://xterm/src/common/WindowsMode.ts","webpack://xterm/src/common/buffer/AttributeData.ts","webpack://xterm/src/common/buffer/Buffer.ts","webpack://xterm/src/common/buffer/BufferLine.ts","webpack://xterm/src/common/buffer/BufferRange.ts","webpack://xterm/src/common/buffer/BufferReflow.ts","webpack://xterm/src/common/buffer/BufferSet.ts","webpack://xterm/src/common/buffer/CellData.ts","webpack://xterm/src/common/buffer/Constants.ts","webpack://xterm/src/common/buffer/Marker.ts","webpack://xterm/src/common/data/Charsets.ts","webpack://xterm/src/common/data/EscapeSequences.ts","webpack://xterm/src/common/input/Keyboard.ts","webpack://xterm/src/common/input/TextDecoder.ts","webpack://xterm/src/common/input/UnicodeV6.ts","webpack://xterm/src/common/input/WriteBuffer.ts","webpack://xterm/src/common/parser/Constants.ts","webpack://xterm/src/common/parser/DcsParser.ts","webpack://xterm/src/common/parser/EscapeSequenceParser.ts","webpack://xterm/src/common/parser/OscParser.ts","webpack://xterm/src/common/parser/Params.ts","webpack://xterm/src/common/services/BufferService.ts","webpack://xterm/src/common/services/CharsetService.ts","webpack://xterm/src/common/services/CoreMouseService.ts","webpack://xterm/src/common/services/CoreService.ts","webpack://xterm/src/common/services/DirtyRowService.ts","webpack://xterm/src/common/services/InstantiationService.ts","webpack://xterm/src/common/services/LogService.ts","webpack://xterm/src/common/services/OptionsService.ts","webpack://xterm/src/common/services/ServiceRegistry.ts","webpack://xterm/src/common/services/Services.ts","webpack://xterm/src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/src/browser/public/Terminal.ts","src/TerminalUI.js","node_modules/parseuri/index.js","node_modules/ms/index.js","node_modules/debug/src/common.js","node_modules/process/browser.js","node_modules/debug/src/browser.js","node_modules/socket.io-client/build/url.js","node_modules/has-cors/index.js","node_modules/engine.io-client/lib/globalThis.browser.js","node_modules/engine.io-client/lib/xmlhttprequest.js","node_modules/engine.io-parser/lib/commons.js","node_modules/engine.io-parser/lib/encodePacket.browser.js","node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","node_modules/engine.io-parser/lib/decodePacket.browser.js","node_modules/engine.io-parser/lib/index.js","node_modules/component-emitter/index.js","node_modules/engine.io-client/lib/transport.js","node_modules/parseqs/index.js","node_modules/yeast/index.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/util.js","node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/transports/polling-jsonp.js","node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/transports/index.js","node_modules/engine.io-client/lib/socket.js","node_modules/engine.io-client/lib/index.js","node_modules/socket.io-parser/dist/is-binary.js","node_modules/socket.io-parser/dist/binary.js","node_modules/socket.io-parser/dist/index.js","node_modules/socket.io-client/build/on.js","node_modules/socket.io-client/build/typed-events.js","node_modules/socket.io-client/build/socket.js","node_modules/backo2/index.js","node_modules/socket.io-client/build/manager.js","node_modules/socket.io-client/build/index.js","src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","self","_terminal","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","RenderDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","window","dispose","removeElementFromParent","this","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","channels","rgb","rgba","toPaddedHex","c","s","contrastRatio","l1","l2","toCss","r","g","b","undefined","toRgba","color","blend","bg","fg","css","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","result","toColor","opaque","rgbaColor","toChannels","opacity","parseInt","slice","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","bgL","fgL","_color","_rgba","clear","setCss","getCss","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","onOptionsChange","setTheme","theme","_parseColor","selection","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","component","Number","alpha","ColorManager","elements","parentElement","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","x","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onAnsiColorChange","_changeAnsiColor","forwardEvent","onCursorMove","onTitleChange","_afterResize","optionsService","_colorManager","ansiColor","colorIndex","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","_coreService","sendFocus","C0","ESC","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","onMouseDown","_coreMouseService","areMouseEventsActive","disable","enable","bindMouse","rendererType","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","column","setSelection","getSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","keyCode","charCode","which","String","fromCharCode","_soundBell","playBellSound","hasValidSize","getBlankLine","DEFAULT_ATTR_DATA","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","Terminal","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","newScrollTop","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_textarea","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","isWrapped","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","rowDifference","currX","_addons","instance","loadAddon","terminal","loadedAddon","isDisposed","_wrappedAddonDispose","apply","AddonManager","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","getChars","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","toColorRGB","join","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","CellData","_state","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","cursorBlink","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","cache","GridCache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","instantiationService","_id","_renderLayers","TextRenderLayer","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","l","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","terminalFont","_forEachCell","firstRow","lastRow","callback","joinedRanges","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","prevFillStyle","nextFillStyle","isBgPalette","_drawForeground","isInvisible","isUnderline","beginFrame","hasOwnProperty","overlaps","measureText","_didWarmUp","_doWarmUp","BaseCharAtlas","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","colorCode","CHAR_ATLAS_CELL_SPACING","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_width","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","putImageData","_addGlyphToBitmap","isSafari","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","lineLength","charElement","display","_applyMinimumContrast","_addStyle","padStart","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","onBufferActivate","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","getOption","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","createDecorator","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","charCodeAt","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","onData","onBinary","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","parse","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","ident","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","put","concat","subarray","unhook","success","utf32ToString","pt","_parser","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onAnsiColorChange","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","BEL","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setAnsiColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","error","DECRQSS","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","clearRange","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","origin","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","fill","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","underlineStyle","updateExtended","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","_parseAnsiColorChange","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","_disposables","d","unregister","disposables","array","isNode","navigator","userAgent","platform","includes","test","isIpad","isIphone","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","marker","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","Buffer","_buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_normal","_alt","_activeBuffer","inactiveBuffer","BufferSet","obj","combined","DEFAULT_ATTR","_nextId","_onDispose","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","codepoint","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","mid","UnicodeV6","qmt","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","startTime","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","k","newParams","prototype","getSubParamsAll","store","cur","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_end","_entries","entries","service","ServiceCollection","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","optionsKeyToLogLevel","DEBUG","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","allowProposedApi","altClickMovesCursor","FONT_WEIGHT_OPTIONS","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","setOption","serviceRegistry","decorator","arguments","storeServiceDependency","_providers","_onChange","defaultProvider","_activeProvider","provider","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","_core","_addonManager","_checkProposedApi","onBell","ParserApi","UnicodeApi","BufferNamespaceApi","columns","_verifyIntegers","registerMarker","writeUtf8","writeln","addon","Infinity","init","getLine","BufferLineApiView","_onBufferChange","BufferApiView","_alternate","alternate","_line","getCell","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","versions","activeVersion","TerminalUI","socket","sendInput","on","emit","prompt","setup","env","createDebug","namespace","prevTime","enableOverride","curr","ms","coerce","format","formatter","formatters","formatArgs","useColors","selectColor","extend","destroy","defineProperty","enumerable","configurable","delimiter","newDebug","toNamespace","regexp","default","stack","namespaces","names","skips","substr","humanize","require","hash","load","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","noop","nextTick","title","argv","once","removeAllListeners","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","__nwjs","toLowerCase","documentElement","WebkitAppearance","firebug","exception","$1","lastC","storage","setItem","removeItem","getItem","localstorage","localStorage","warned","JSON","stringify","url","parseuri","path","loc","host","port","ipv6","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","isView","encodePacket","supportsBinary","encodeBlobAsBase64","fileReader","FileReader","onload","readAsDataURL","encode","arraybuffer","bufferLength","encoded1","encoded2","encoded3","encoded4","base64decoder","decodePacket","encodedPacket","binaryType","mapBinary","decodeBase64Packet","decoded","SEPARATOR","encodePayload","packets","encodedPackets","packet","decodePayload","encodedPayload","decodedPacket","hasBinary","isBinary","withNativeFile","File","toJSON","reconstructPacket","deconstructPacket","is_binary_1","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","_reconstructPacket","Decoder","Encoder","PacketType","Emitter","binary_1","EVENT","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","deconstruction","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","buf","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","fn","StrictEventEmitter","Socket","socket_io_parser_1","on_1","typed_events_1","RESERVED_EVENTS","connect_error","disconnecting","newListener","io","receiveBuffer","sendBuffer","ids","acks","connected","disconnected","auth","_autoConnect","subs","onopen","onpacket","onerror","onclose","subEvents","_readyState","compress","isTransportWritable","engine","transport","writable","volatile","_packet","emitReserved","reason","sid","onconnect","onevent","onack","ondisconnect","ack","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","Manager","eio","socket_1","parser","Backoff","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","jitter","encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_a","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","_reconnecting","attempts","reconnect","skipReconnect","openSubDestroy","errorSub","cleanup","maybeReconnectOnOpen","timer","close","autoUnref","unref","onping","ondata","ondecoded","_close","delay","duration","onreconnect","attempt","url_1","manager_1","lookup","managers","parsed","sameNamespace","forceNew","multiplex","query","queryKey","manager_2","serverAddress","getElementById","connectToSocket","startTerminal","attachTo","startListening","handleClick"],"mappings":"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","file":"src.051176ac.js","sourceRoot":"..","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.options.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IAnsiColorChangeEvent } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { ITerminalOptions as IInitializedTerminalOptions } from 'common/services/Services';\nimport { rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): IInitializedTerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell  = new EventEmitter<void>();\n  public get onBell (): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onAnsiColorChange((event) => this._changeAnsiColor(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  private _changeAnsiColor(event: IAnsiColorChangeEvent): void {\n    if (!this._colorManager) { return; }\n\n    for (const ansiColor of event.colors) {\n      const color = rgba.toColor(ansiColor.red, ansiColor.green, ansiColor.blue);\n\n      this._colorManager!.colors.ansi[ansiColor.colorIndex] = color;\n    }\n\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.options.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.options.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this._coreService.decPrivateModes.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this._coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this.element.setAttribute('role', 'document');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.element, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this._coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this._coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport!.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }, { passive: true }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this._coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this._coreService.isCursorInitialized) {\n      this._coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this._coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'ideographic';\n    this._clipRow(y);\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'ideographic';\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n      cell.getChars(),\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'ideographic';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerService._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(e => this._fullRefresh()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ITerminalOptions, IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _coreService: ICoreService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _coreMouseService: ICoreMouseService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n\n  constructor(\n    options: ITerminalOptions\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this._coreService.onData, this._onData));\n    this.register(forwardEvent(this._coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.options.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IAnsiColorChangeEvent, IParseStack } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onAnsiColorChange = new EventEmitter<IAnsiColorChangeEvent>();\n  public get onAnsiColorChange(): IEvent<IAnsiColorChangeEvent> { return this._onAnsiColorChange.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setAnsiColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let buffer = this._bufferService.buffer;\n    let cursorStartX = buffer.x;\n    let cursorStartY = buffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n\n    this._dirtyRowService.markDirty(buffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (buffer.x && end - start > 0 && bufferRow.getWidth(buffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(buffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (buffer.x < cols) {\n            bufferRow.setCellFromCodePoint(buffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.ybase + buffer.y)!;\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (buffer.x < cols && end - start > 0 && bufferRow.getWidth(buffer.x) === 0 && !bufferRow.hasContent(buffer.x)) {\n      bufferRow.setCellFromCodePoint(buffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    this._dirtyRowService.markDirty(buffer.y);\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._bufferService.buffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    const buffer = this._bufferService.buffer;\n\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (buffer.x > 0) {\n        buffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (buffer.x > 0) {\n      buffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (buffer.x === 0\n          && buffer.y > buffer.scrollTop\n          && buffer.y <= buffer.scrollBottom\n          && buffer.lines.get(buffer.ybase + buffer.y)?.isWrapped)\n      {\n        buffer.lines.get(buffer.ybase + buffer.y)!.isWrapped = false;\n        buffer.y--;\n        buffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = buffer.lines.get(buffer.ybase + buffer.y)!;\n        if (line.hasWidth(buffer.x) && !line.hasContent(buffer.x)) {\n          buffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._onA11yTab.fire(this._bufferService.buffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._bufferService.buffer.x = Math.min(maxCol, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y)!;\n    line.fill(this._bufferService.buffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = buffer.ybase + buffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(0, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y)!;\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y)!;\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + this._bufferService.buffer.y);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters.                                  | #N      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out.                                         | #N      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._bufferService.buffer.savedX = 0;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._charsetService.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  protected _parseAnsiColorChange(data: string): IAnsiColorChangeEvent | null {\n    const result: IAnsiColorChangeEvent = { colors: [] };\n    // example data: 5;rgb:aa/bb/cc\n    const regex = /(\\d+);rgb:([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})/gi;\n    let match;\n\n    while ((match = regex.exec(data)) !== null) {\n      result.colors.push({\n        colorIndex: parseInt(match[1]),\n        red: parseInt(match[2], 16),\n        green: parseInt(match[3], 16),\n        blue: parseInt(match[4], 16)\n      });\n    }\n\n    if (result.colors.length === 0) {\n      return null;\n    }\n\n    return result;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. `spec` color format is 'rgb:hh/hh/hh' where `h` are hexadecimal digits.\n   * There may be multipe c ; spec elements present in the same instruction, e.g. 1;rgb:10/20/30;2;rgb:a0/b0/c0.\n   */\n  public setAnsiColor(data: string): boolean {\n    const event = this._parseAnsiColorChange(data);\n    if (event) {\n      this._onAnsiColorChange.fire(event);\n    }\n    else {\n      this._logService.warn(`Expected format <num>;rgb:<rr>/<gg>/<bb> but got data: ${data}`);\n    }\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._bufferService.buffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.ybase + buffer.y, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.ybase + buffer.y, buffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.ybase + buffer.y + yOffset;\n      const line = buffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n});\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    for (const k of Object.keys(options)) {\n      if (k in this.options) {\n        try {\n          const newValue = options[k as keyof IPartialTerminalOptions] as any;\n          this.options[k] = this._sanitizeAndValidateOption(k, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(key)) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  altClickMovesCursor?: boolean;\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  cursorWidth?: number;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n  windowOptions?: IWindowOptions;\n}\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier, ILinkProvider, IUnicodeHandling, IUnicodeVersionProvider, FontWeight } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../LocalizableStrings';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.options.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n\nclass BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ITerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n\nclass UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ITerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","import { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\n\nexport class TerminalUI {\n  constructor(socket) {\n    this.terminal = new Terminal();\n\n    /** You can make your terminals colorful */\n    this.terminal.setOption(\"theme\", {\n      background: \"#202B33\",\n      foreground: \"#F5F8FA\"\n    });\n\n    this.socket = socket;\n  }\n\n  /**\n   * Attach event listeners for terminal UI and socket.io client\n   */\n  startListening() {\n    this.terminal.onData(data => this.sendInput(data));\n    this.socket.on(\"output\", data => {\n      // When there is data from PTY on server, print that on Terminal.\n      this.write(data);\n    });\n  }\n\n  /**\n   * Print something to terminal UI.\n   */\n  write(text) {\n    this.terminal.write(text);\n  }\n\n  /**\n   * Utility function to print new line on terminal.\n   */\n  prompt() {\n    this.terminal.write(`\\r\\n$ `);\n  }\n\n  /**\n   * Send whatever you type in Terminal UI to PTY process in server.\n   * @param {*} input Input to send to server\n   */\n  sendInput(input) {\n    this.socket.emit(\"input\", input);\n  }\n\n  /**\n   *\n   * @param {HTMLElement} container HTMLElement where xterm can attach terminal ui instance.\n   */\n  attachTo(container) {\n    this.terminal.open(container);\n    // Default text to display on terminal.\n    this.terminal.write(\"Terminal Connected\");\n    this.terminal.write(\"\");\n    this.prompt();\n  }\n\n  clear() {\n    this.terminal.clear();\n  }\n}\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.url = void 0;\nconst parseuri = require(\"parseuri\");\nconst debug = require(\"debug\")(\"socket.io-client:url\");\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\nexports.url = url;\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","module.exports = (() => {\n  if (typeof self !== \"undefined\") {\n    return self;\n  } else if (typeof window !== \"undefined\") {\n    return window;\n  } else {\n    return Function(\"return this\")();\n  }\n})();\n","// browser shim for xmlhttprequest module\n\nconst hasCORS = require(\"has-cors\");\nconst globalThis = require(\"./globalThis\");\n\nmodule.exports = function(opts) {\n  const xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  const xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  const enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if (\"undefined\" !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\n        \"Microsoft.XMLHTTP\"\n      );\n    } catch (e) {}\n  }\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\n\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\n\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\nmodule.exports = {\n  PACKET_TYPES,\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n};\n","const { PACKET_TYPES } = require(\"./commons\");\n\nconst withNativeBlob =\n  typeof Blob === \"function\" ||\n  (typeof Blob !== \"undefined\" &&\n    Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data instanceof ArrayBuffer ? data : data.buffer);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require(\"./commons\");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\nlet base64decoder;\nif (withNativeArrayBuffer) {\n  base64decoder = require(\"base64-arraybuffer\");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return { base64: true, data }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case \"arraybuffer\":\n    default:\n      return data; // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;\n","const encodePacket = require(\"./encodePacket\");\nconst decodePacket = require(\"./decodePacket\");\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    encodePacket(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\n\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === \"error\") {\n      break;\n    }\n  }\n  return packets;\n};\n\nmodule.exports = {\n  protocol: 4,\n  encodePacket,\n  encodePayload,\n  decodePacket,\n  decodePayload\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","const parser = require(\"engine.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\n\nclass Transport extends Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  constructor(opts) {\n    super();\n\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = \"\";\n    this.socket = opts.socket;\n  }\n\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api public\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = \"TransportError\";\n    err.description = desc;\n    this.emit(\"error\", err);\n    return this;\n  }\n\n  /**\n   * Opens the transport.\n   *\n   * @api public\n   */\n  open() {\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\n      this.readyState = \"opening\";\n      this.doOpen();\n    }\n\n    return this;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close() {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n  send(packets) {\n    if (\"open\" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug(\"transport is not open, discarding packets\");\n    }\n  }\n\n  /**\n   * Called upon open\n   *\n   * @api private\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    this.emit(\"open\");\n  }\n\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called with a decoded packet.\n   */\n  onPacket(packet) {\n    this.emit(\"packet\", packet);\n  }\n\n  /**\n   * Called upon close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = \"closed\";\n    this.emit(\"close\");\n  }\n}\n\nmodule.exports = Transport;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","const Transport = require(\"../transport\");\nconst parseqs = require(\"parseqs\");\nconst parser = require(\"engine.io-parser\");\nconst yeast = require(\"yeast\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling\");\n\nclass Polling extends Transport {\n  /**\n   * Transport name.\n   */\n  get name() {\n    return \"polling\";\n  }\n\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @api private\n   */\n  doOpen() {\n    this.poll();\n  }\n\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} callback upon buffers are flushed and transport is paused\n   * @api private\n   */\n  pause(onPause) {\n    this.readyState = \"pausing\";\n\n    const pause = () => {\n      debug(\"paused\");\n      this.readyState = \"paused\";\n      onPause();\n    };\n\n    if (this.polling || !this.writable) {\n      let total = 0;\n\n      if (this.polling) {\n        debug(\"we are currently polling - waiting to pause\");\n        total++;\n        this.once(\"pollComplete\", function() {\n          debug(\"pre-pause polling complete\");\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug(\"we are currently writing - waiting to pause\");\n        total++;\n        this.once(\"drain\", function() {\n          debug(\"pre-pause writing complete\");\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n\n  /**\n   * Starts polling cycle.\n   *\n   * @api public\n   */\n  poll() {\n    debug(\"polling\");\n    this.polling = true;\n    this.doPoll();\n    this.emit(\"poll\");\n  }\n\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @api private\n   */\n  onData(data) {\n    debug(\"polling got data %s\", data);\n    const callback = packet => {\n      // if its the first message we consider the transport open\n      if (\"opening\" === this.readyState && packet.type === \"open\") {\n        this.onOpen();\n      }\n\n      // if its a close packet, we close the ongoing requests\n      if (\"close\" === packet.type) {\n        this.onClose();\n        return false;\n      }\n\n      // otherwise bypass onData and handle the message\n      this.onPacket(packet);\n    };\n\n    // decode payload\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\n\n    // if an event did not trigger closing\n    if (\"closed\" !== this.readyState) {\n      // if we got data we're not polling\n      this.polling = false;\n      this.emit(\"pollComplete\");\n\n      if (\"open\" === this.readyState) {\n        this.poll();\n      } else {\n        debug('ignoring poll - transport state \"%s\"', this.readyState);\n      }\n    }\n  }\n\n  /**\n   * For polling, send a close packet.\n   *\n   * @api private\n   */\n  doClose() {\n    const close = () => {\n      debug(\"writing close packet\");\n      this.write([{ type: \"close\" }]);\n    };\n\n    if (\"open\" === this.readyState) {\n      debug(\"transport open - closing\");\n      close();\n    } else {\n      // in case we're trying to close while\n      // handshaking is in progress (GH-164)\n      debug(\"transport not open - deferring close\");\n      this.once(\"open\", close);\n    }\n  }\n\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} data packets\n   * @param {Function} drain callback\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    parser.encodePayload(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emit(\"drain\");\n      });\n    });\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    let port = \"\";\n\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n        (\"http\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n}\n\nmodule.exports = Polling;\n","module.exports.pick = (obj, ...attr) => {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n};\n","/* global attachEvent */\n\nconst XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", err => {\n      this.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", err => {\n      this.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\",\n      \"autoUnref\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = () => {\n          this.onLoad();\n        };\n        xhr.onerror = () => {\n          this.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = () => {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(() => {\n              this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n","const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    callbacks.push(this.onData.bind(this));\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = e => {\n      this.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      setTimeout(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    const initIframe = () => {\n      if (this.iframe) {\n        try {\n          this.form.removeChild(this.iframe);\n        } catch (e) {\n          this.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + this.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = this.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = this.iframeId;\n\n      this.form.appendChild(iframe);\n      this.iframe = iframe;\n    };\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = () => {\n        if (this.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n","const globalThis = require(\"../globalThis\");\nconst nextTick = (() => {\n  const isPromiseAvailable =\n    typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n  if (isPromiseAvailable) {\n    return cb => Promise.resolve().then(cb);\n  } else {\n    return cb => setTimeout(cb, 0);\n  }\n})();\n\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: \"arraybuffer\",\n  nextTick\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","const Transport = require(\"../transport\");\nconst parser = require(\"engine.io-parser\");\nconst parseqs = require(\"parseqs\");\nconst yeast = require(\"yeast\");\nconst { pick } = require(\"../util\");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType,\n  nextTick\n} = require(\"./websocket-constructor\");\n\nconst debug = require(\"debug\")(\"engine.io-client:websocket\");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return \"websocket\";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          \"agent\",\n          \"perMessageDeflate\",\n          \"pfx\",\n          \"key\",\n          \"passphrase\",\n          \"cert\",\n          \"ca\",\n          \"ciphers\",\n          \"rejectUnauthorized\",\n          \"localAddress\",\n          \"protocolVersion\",\n          \"origin\",\n          \"maxPayload\",\n          \"family\",\n          \"checkServerIdentity\"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit(\"error\", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = this.onClose.bind(this);\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError(\"websocket error\", e);\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n\n      parser.encodePacket(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (this.opts.perMessageDeflate) {\n            const len =\n              \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug(\"websocket closed before onclose event\");\n        }\n\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          nextTick(() => {\n            this.writable = true;\n            this.emit(\"drain\");\n          });\n        }\n      });\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n        (\"ws\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !(\"__initialize\" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n","const XMLHttpRequest = require(\"../../contrib/xmlhttprequest-ssl/XMLHttpRequest\");\nconst XHR = require(\"./polling-xhr\");\nconst JSONP = require(\"./polling-jsonp\");\nconst websocket = require(\"./websocket\");\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  let xhr;\n  let xd = false;\n  let xs = false;\n  const jsonp = false !== opts.jsonp;\n\n  if (typeof location !== \"undefined\") {\n    const isSSL = \"https:\" === location.protocol;\n    let port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if (\"open\" in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error(\"JSONP disabled\");\n    return new JSONP(opts);\n  }\n}\n","const transports = require(\"./transports/index\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:socket\");\nconst parser = require(\"engine.io-parser\");\nconst parseuri = require(\"parseuri\");\nconst parseqs = require(\"parseqs\");\n\nclass Socket extends Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri or options\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts = {}) {\n    super();\n\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n\n    if (uri) {\n      uri = parseuri(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = parseuri(opts.host).host;\n    }\n\n    this.secure =\n      null != opts.secure\n        ? opts.secure\n        : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? \"443\" : \"80\";\n    }\n\n    this.hostname =\n      opts.hostname ||\n      (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n    this.port =\n      opts.port ||\n      (typeof location !== \"undefined\" && location.port\n        ? location.port\n        : this.secure\n        ? 443\n        : 80);\n\n    this.transports = opts.transports || [\"polling\", \"websocket\"];\n    this.readyState = \"\";\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n\n    this.opts = Object.assign(\n      {\n        path: \"/engine.io\",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        jsonp: true,\n        timestampParam: \"t\",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {},\n        closeOnBeforeunload: true\n      },\n      opts\n    );\n\n    this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n\n    if (typeof this.opts.query === \"string\") {\n      this.opts.query = parseqs.decode(this.opts.query);\n    }\n\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n\n    if (typeof addEventListener === \"function\") {\n      if (this.opts.closeOnBeforeunload) {\n        // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n        // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n        // closed/reloaded)\n        addEventListener(\n          \"beforeunload\",\n          () => {\n            if (this.transport) {\n              // silently close the transport\n              this.transport.removeAllListeners();\n              this.transport.close();\n            }\n          },\n          false\n        );\n      }\n      if (this.hostname !== \"localhost\") {\n        this.offlineEventListener = () => {\n          this.onClose(\"transport close\");\n        };\n        addEventListener(\"offline\", this.offlineEventListener, false);\n      }\n    }\n\n    this.open();\n  }\n\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} transport name\n   * @return {Transport}\n   * @api private\n   */\n  createTransport(name) {\n    debug('creating transport \"%s\"', name);\n    const query = clone(this.opts.query);\n\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n\n    // transport name\n    query.transport = name;\n\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n\n    const opts = Object.assign(\n      {},\n      this.opts.transportOptions[name],\n      this.opts,\n      {\n        query,\n        socket: this,\n        hostname: this.hostname,\n        secure: this.secure,\n        port: this.port\n      }\n    );\n\n    debug(\"options: %j\", opts);\n\n    return new transports[name](opts);\n  }\n\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @api private\n   */\n  open() {\n    let transport;\n    if (\n      this.opts.rememberUpgrade &&\n      Socket.priorWebsocketSuccess &&\n      this.transports.indexOf(\"websocket\") !== -1\n    ) {\n      transport = \"websocket\";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      setTimeout(() => {\n        this.emit(\"error\", \"No transports available\");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = \"opening\";\n\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      debug(\"error while creating transport: %s\", e);\n      this.transports.shift();\n      this.open();\n      return;\n    }\n\n    transport.open();\n    this.setTransport(transport);\n  }\n\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @api private\n   */\n  setTransport(transport) {\n    debug(\"setting transport %s\", transport.name);\n\n    if (this.transport) {\n      debug(\"clearing existing transport %s\", this.transport.name);\n      this.transport.removeAllListeners();\n    }\n\n    // set up transport\n    this.transport = transport;\n\n    // set up transport listeners\n    transport\n      .on(\"drain\", this.onDrain.bind(this))\n      .on(\"packet\", this.onPacket.bind(this))\n      .on(\"error\", this.onError.bind(this))\n      .on(\"close\", () => {\n        this.onClose(\"transport close\");\n      });\n  }\n\n  /**\n   * Probes a transport.\n   *\n   * @param {String} transport name\n   * @api private\n   */\n  probe(name) {\n    debug('probing transport \"%s\"', name);\n    let transport = this.createTransport(name, { probe: 1 });\n    let failed = false;\n\n    Socket.priorWebsocketSuccess = false;\n\n    const onTransportOpen = () => {\n      if (failed) return;\n\n      debug('probe transport \"%s\" opened', name);\n      transport.send([{ type: \"ping\", data: \"probe\" }]);\n      transport.once(\"packet\", msg => {\n        if (failed) return;\n        if (\"pong\" === msg.type && \"probe\" === msg.data) {\n          debug('probe transport \"%s\" pong', name);\n          this.upgrading = true;\n          this.emit(\"upgrading\", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n\n          debug('pausing current transport \"%s\"', this.transport.name);\n          this.transport.pause(() => {\n            if (failed) return;\n            if (\"closed\" === this.readyState) return;\n            debug(\"changing transport and sending upgrade packet\");\n\n            cleanup();\n\n            this.setTransport(transport);\n            transport.send([{ type: \"upgrade\" }]);\n            this.emit(\"upgrade\", transport);\n            transport = null;\n            this.upgrading = false;\n            this.flush();\n          });\n        } else {\n          debug('probe transport \"%s\" failed', name);\n          const err = new Error(\"probe error\");\n          err.transport = transport.name;\n          this.emit(\"upgradeError\", err);\n        }\n      });\n    };\n\n    function freezeTransport() {\n      if (failed) return;\n\n      // Any callback called by transport should be ignored since now\n      failed = true;\n\n      cleanup();\n\n      transport.close();\n      transport = null;\n    }\n\n    // Handle any error that happens while probing\n    const onerror = err => {\n      const error = new Error(\"probe error: \" + err);\n      error.transport = transport.name;\n\n      freezeTransport();\n\n      debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n      this.emit(\"upgradeError\", error);\n    };\n\n    function onTransportClose() {\n      onerror(\"transport closed\");\n    }\n\n    // When the socket is closed while we're probing\n    function onclose() {\n      onerror(\"socket closed\");\n    }\n\n    // When the socket is upgraded while we're probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n        freezeTransport();\n      }\n    }\n\n    // Remove all listeners on the transport and on self\n    const cleanup = () => {\n      transport.removeListener(\"open\", onTransportOpen);\n      transport.removeListener(\"error\", onerror);\n      transport.removeListener(\"close\", onTransportClose);\n      this.removeListener(\"close\", onclose);\n      this.removeListener(\"upgrading\", onupgrade);\n    };\n\n    transport.once(\"open\", onTransportOpen);\n    transport.once(\"error\", onerror);\n    transport.once(\"close\", onTransportClose);\n\n    this.once(\"close\", onclose);\n    this.once(\"upgrading\", onupgrade);\n\n    transport.open();\n  }\n\n  /**\n   * Called when connection is deemed open.\n   *\n   * @api public\n   */\n  onOpen() {\n    debug(\"socket open\");\n    this.readyState = \"open\";\n    Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n    this.emit(\"open\");\n    this.flush();\n\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\n      \"open\" === this.readyState &&\n      this.opts.upgrade &&\n      this.transport.pause\n    ) {\n      debug(\"starting upgrade probes\");\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n\n  /**\n   * Handles a packet.\n   *\n   * @api private\n   */\n  onPacket(packet) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n      this.emit(\"packet\", packet);\n\n      // Socket is live - any packet counts\n      this.emit(\"heartbeat\");\n\n      switch (packet.type) {\n        case \"open\":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n\n        case \"ping\":\n          this.resetPingTimeout();\n          this.sendPacket(\"pong\");\n          this.emit(\"ping\");\n          this.emit(\"pong\");\n          break;\n\n        case \"error\":\n          const err = new Error(\"server error\");\n          err.code = packet.data;\n          this.onError(err);\n          break;\n\n        case \"message\":\n          this.emit(\"data\", packet.data);\n          this.emit(\"message\", packet.data);\n          break;\n      }\n    } else {\n      debug('packet received with socket readyState \"%s\"', this.readyState);\n    }\n  }\n\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} handshake obj\n   * @api private\n   */\n  onHandshake(data) {\n    this.emit(\"handshake\", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if (\"closed\" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @api private\n   */\n  resetPingTimeout() {\n    clearTimeout(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = setTimeout(() => {\n      this.onClose(\"ping timeout\");\n    }, this.pingInterval + this.pingTimeout);\n    if (this.opts.autoUnref) {\n      this.pingTimeoutTimer.unref();\n    }\n  }\n\n  /**\n   * Called on `drain` event\n   *\n   * @api private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n\n    if (0 === this.writeBuffer.length) {\n      this.emit(\"drain\");\n    } else {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flush write buffers.\n   *\n   * @api private\n   */\n  flush() {\n    if (\n      \"closed\" !== this.readyState &&\n      this.transport.writable &&\n      !this.upgrading &&\n      this.writeBuffer.length\n    ) {\n      debug(\"flushing %d packets in socket\", this.writeBuffer.length);\n      this.transport.send(this.writeBuffer);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = this.writeBuffer.length;\n      this.emit(\"flush\");\n    }\n  }\n\n  /**\n   * Sends a message.\n   *\n   * @param {String} message.\n   * @param {Function} callback function.\n   * @param {Object} options.\n   * @return {Socket} for chaining.\n   * @api public\n   */\n  write(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  send(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  /**\n   * Sends a packet.\n   *\n   * @param {String} packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @api private\n   */\n  sendPacket(type, data, options, fn) {\n    if (\"function\" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n\n    if (\"function\" === typeof options) {\n      fn = options;\n      options = null;\n    }\n\n    if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n      return;\n    }\n\n    options = options || {};\n    options.compress = false !== options.compress;\n\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emit(\"packetCreate\", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once(\"flush\", fn);\n    this.flush();\n  }\n\n  /**\n   * Closes the connection.\n   *\n   * @api private\n   */\n  close() {\n    const close = () => {\n      this.onClose(\"forced close\");\n      debug(\"socket closing - telling transport to close\");\n      this.transport.close();\n    };\n\n    const cleanupAndClose = () => {\n      this.removeListener(\"upgrade\", cleanupAndClose);\n      this.removeListener(\"upgradeError\", cleanupAndClose);\n      close();\n    };\n\n    const waitForUpgrade = () => {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      this.once(\"upgrade\", cleanupAndClose);\n      this.once(\"upgradeError\", cleanupAndClose);\n    };\n\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.readyState = \"closing\";\n\n      if (this.writeBuffer.length) {\n        this.once(\"drain\", () => {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Called upon transport error\n   *\n   * @api private\n   */\n  onError(err) {\n    debug(\"socket error %j\", err);\n    Socket.priorWebsocketSuccess = false;\n    this.emit(\"error\", err);\n    this.onClose(\"transport error\", err);\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose(reason, desc) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket close with reason: \"%s\"', reason);\n\n      // clear timers\n      clearTimeout(this.pingIntervalTimer);\n      clearTimeout(this.pingTimeoutTimer);\n\n      // stop event from firing again for transport\n      this.transport.removeAllListeners(\"close\");\n\n      // ensure transport won't stay open\n      this.transport.close();\n\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n\n      if (typeof removeEventListener === \"function\") {\n        removeEventListener(\"offline\", this.offlineEventListener, false);\n      }\n\n      // set ready state\n      this.readyState = \"closed\";\n\n      // clear session id\n      this.id = null;\n\n      // emit close event\n      this.emit(\"close\", reason, desc);\n\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      this.writeBuffer = [];\n      this.prevBufferLen = 0;\n    }\n  }\n\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} server upgrades\n   * @api private\n   *\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i]))\n        filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\nfunction clone(obj) {\n  const o = {};\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\nmodule.exports = Socket;\n","const Socket = require(\"./socket\");\n\nmodule.exports = (uri, opts) => new Socket(uri, opts);\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nmodule.exports.Socket = Socket;\nmodule.exports.protocol = Socket.protocol; // this is an int\nmodule.exports.Transport = require(\"./transport\");\nmodule.exports.transports = require(\"./transports/index\");\nmodule.exports.parser = require(\"engine.io-parser\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_1 = require(\"./is-binary\");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst Emitter = require(\"component-emitter\");\nconst binary_1 = require(\"./binary\");\nconst is_binary_1 = require(\"./is-binary\");\nconst debug = require(\"debug\")(\"socket.io-parser\");\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emit(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emit(\"decoded\", packet);\n            }\n        }\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emit(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrictEventEmitter = void 0;\nconst Emitter = require(\"component-emitter\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends Emitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        super.on(ev, listener);\n        return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        super.once(ev, listener);\n        return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:socket\");\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends typed_events_1.StrictEventEmitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        this.ids = 0;\n        this.acks = {};\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.connected = false;\n        this.disconnected = true;\n        this.flags = {};\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on_1.on(io, \"open\", this.onopen.bind(this)),\n            on_1.on(io, \"packet\", this.onpacket.bind(this)),\n            on_1.on(io, \"error\", this.onerror.bind(this)),\n            on_1.on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            debug(\"emitting packet with ack id %d\", this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\nexports.Socket = Socket;\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst eio = require(\"engine.io-client\");\nconst socket_1 = require(\"./socket\");\nconst parser = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst Backoff = require(\"backo2\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:manager\");\nclass Manager extends typed_events_1.StrictEventEmitter {\n    constructor(uri, opts) {\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor(opts.randomizationFactor || 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = eio(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_1.on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_1.on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = setTimeout(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_1.on(socket, \"ping\", this.onping.bind(this)), on_1.on(socket, \"data\", this.ondata.bind(this)), on_1.on(socket, \"error\", this.onerror.bind(this)), on_1.on(socket, \"close\", this.onclose.bind(this)), on_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        debug(\"onclose\");\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = setTimeout(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.io = exports.Socket = exports.Manager = exports.protocol = void 0;\nconst url_1 = require(\"./url\");\nconst manager_1 = require(\"./manager\");\nconst debug = require(\"debug\")(\"socket.io-client\");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url_1.url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = require(\"socket.io-parser\");\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = require(\"./manager\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_2.Manager; } });\nvar socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nexports.default = lookup;\n","import { TerminalUI } from \"./TerminalUI\";\nimport { io } from \"socket.io-client\";\n\n// local server\n// const serverAddress = \"http://localhost:3000\";\nconst serverAddress = \"https://zombie-castle-rush-server.herokuapp.com/\";\nconst container = document.getElementById(\"terminal-container\");\nconst button = document.getElementById(\"play\");\ncontainer.style.display = \"none\";\n\nfunction connectToSocket(serverAddress) {\n  return new Promise(res => {\n    const socket = io(serverAddress);\n    res(socket);\n  });\n}\n\nfunction startTerminal(container, socket) {\n  const terminal = new TerminalUI(socket);\n  terminal.attachTo(container);\n  terminal.startListening();\n  return terminal;\n}\n\nfunction handleClick() {\n  container.style.display = \"block\";\n}\n\nfunction start() {\n  connectToSocket(serverAddress).then(socket => {\n    const terminal = startTerminal(container, socket);\n    terminal.sendInput(\"sh run.sh\\n\");\n  });\n}\n\n// Better to start on DOMContentLoaded. So, we know terminal-container is loaded\nbutton.addEventListener(\"click\", handleClick);\nstart();\n"]}